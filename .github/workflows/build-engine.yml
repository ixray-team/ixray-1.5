name: 'Build engine'

on:
  push:
    branches:
      - '**'
    paths:
      - '.github/workflows/**'
      - 'gamedata/**'
      - 'proj/**'
      - 'sdk/**'
      - 'src/**'
      - '*.sln'
      - '*.props'
      - '*.targets'
      - '*.ltx'
      - '*.bat'
  pull_request:
    branches:
      - '**'
    paths:
      - '.github/workflows/**'
      - 'gamedata/**'
      - 'proj/**'
      - 'sdk/**'
      - 'src/**'
      - '*.sln'
      - '*.props'
      - '*.targets'
      - '*.ltx'
      - '*.bat'

defaults:
  run:
    shell: pwsh

jobs:
  build-engine:
    name: 'Build'

    strategy:
      matrix:
        system:
          - windows-2022
        config:
          - Debug
          - Mixed
          - Release
        platform:
          - x86

    runs-on: ${{ matrix.system }}

    env:
      solution_name: XRay.sln

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: '>=5'

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            ${{ github.workspace }}/packages
          key: |
            ${{ runner.os }}-nuget-${{ hashFiles('**/*.nupkg') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          nuget restore $env:solution_name

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Build solution
        run: |
          msbuild $env:solution_name `
            -p:Configuration=${{ matrix.config }} `
            -p:Platform=${{ matrix.platform }} `
            -maxCpuCount `
            -nologo

      - name: Upload engine binaries
        uses: actions/upload-artifact@v3
        with:
          name: bin-engine-(${{ matrix.platform }}-${{ matrix.config }})-(${{ github.sha }})
          path: |
            bin/Win32/${{ matrix.config }}/*.exe
            bin/Win32/${{ matrix.config }}/*.dll

      - name: Upload server binaries
        uses: actions/upload-artifact@v3
        with:
          name: bin-dedicated-(${{ matrix.platform }}-${{ matrix.config }})-(${{ github.sha }})
          path: |
            bin/dedicated/Win32/${{ matrix.config }}/*.exe
            bin/dedicated/Win32/${{ matrix.config }}/*.dll

      - name: Upload utilities binaries
        uses: actions/upload-artifact@v3
        with:
          name: bin-utils-(${{ matrix.platform }}-${{ matrix.config }})-(${{ github.sha }})
          path: |
            bin/utils/Win32/${{ matrix.config }}/*.exe
            bin/utils/Win32/${{ matrix.config }}/*.dll

      - name: Upload engine libraries
        uses: actions/upload-artifact@v3
        with:
          name: lib-engine-(${{ matrix.platform }}-${{ matrix.config }})-(${{ github.sha }})
          path: |
            lib/Win32/${{ matrix.config }}/*.lib
            lib/Win32/${{ matrix.config }}/*.exp

      - name: Upload server libraries
        uses: actions/upload-artifact@v3
        with:
          name: lib-dedicated-(${{ matrix.platform }}-${{ matrix.config }})-(${{ github.sha }})
          path: |
            lib/dedicated/Win32/${{ matrix.config }}/*.lib
            lib/dedicated/Win32/${{ matrix.config }}/*.exp

      - name: Upload utilities libraries
        uses: actions/upload-artifact@v3
        with:
          name: lib-utils-(${{ matrix.platform }}-${{ matrix.config }})-(${{ github.sha }})
          path: |
            lib/utils/Win32/${{ matrix.config }}/*.lib
            lib/utils/Win32/${{ matrix.config }}/*.exp

  pack-assets:
    name: 'Pack'

    needs: build-engine

    strategy:
      matrix:
        system:
          - windows-2022
        config:
          - Release
        platform:
          - x86

    runs-on: ${{ matrix.system }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get binaries
        uses: actions/download-artifact@v4.1.7
        with:
          name: bin-utils-(${{ matrix.platform }}-${{ matrix.config }})-(${{ github.sha }})
          path: bin/utils/Win32/${{ matrix.config }}/

      - name: Generate patch
        run: |
          ${{ github.workspace }}/generate-patch.bat
          move ${{ github.workspace }}/patch `
            ${{ github.workspace }}/temp/gamedata

      - name: Upload gamedata
        uses: actions/upload-artifact@v3
        with:
          name: gamedata-(${{ github.sha }})
          path: temp/gamedata/

      - name: Upload patch
        uses: actions/upload-artifact@v3
        with:
          name: patch-(${{ github.sha }})
          path: patches/xpatch_11.db
